#! /bin/bash

### BEGIN INIT INFO
# Provides: <%= @name %>
# Required-Start:
# Required-Stop:
# Default-Start:  2 3 4 5
# Default-Stop:
# Short-Description: <%= @name %>
### END INIT INFO

set -e

NAME="<%= @name %>"
DESC="<%= @name %>"
PID_FILE="<%= @pid_file %>"
START_STOP_DAEMON="/sbin/start-stop-daemon"
DAEMON="<%= @daemon %>"
OPTIONS="<%= @options %>"

<% @file_check.each do |f| %>
test -f <%= f %> || exit 0
<% end %>

<% @executable_check.each do |f| %>
test -x <%= f %> || exit 0
<% end %>

<% @directory_check.each do |f| %>
test -d <%= f %> || exit 0
<% end %>

<% @vars_to_unset.each do |v| %>
unset <%= v %>
<% end %>

<%= @code %>

umask 022

. /lib/lsb/init-functions

status_<%= @name %>() {
  status_of_proc -p "$PID_FILE" "<%= @name %>" "$NAME"
}

kill_<%= @name %>() {
  start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PID_FILE
  RETVAL="$?"
  [ "$RETVAL" = 2 ] && return 2
  rm -f $PID_FILE
}

run_<%= @name %>() {
 echo "Running $NAME :"
  <%= @su_command %> $DAEMON $OPTIONS <%= @end_of_command %>"
}

start_<%= @name %>() {
  $START_STOP_DAEMON <%= @start_options %> --oknodo --start --pidfile $PID_FILE --startas /bin/sh -- -c "exec $DAEMON $OPTIONS <%= @end_of_command %>"
  sleep 1
  status_<%= @name %>
  <%= @post_start %>
}

case "$1" in
  run)
    run_<%= @name %>
    ;;
  start)
    echo -n "Starting $DESC: "
    start_<%= @name %>
    echo "$NAME."
    ;;
  stop)
    echo -n "Stopping $DESC: "
    kill_<%= @name %>
    echo "$NAME."
    ;;
  restart)
    echo -n "Restarting $DESC: "
    kill_<%= @name %> || true
    sleep 1
    start_<%= @name %>
    echo "$NAME."
    ;;
  status)
    status_<%= @name %>
    ;;
  *)
    echo "Usage: /etc/init.d/<%= @name %> {start|stop|restart|status|run}"
    exit 1
esac

exit 0
